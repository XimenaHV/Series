---
title: "Presentación con shiny"
format: 
  revealjs:
    theme: beige
    scrollable: true
server: shiny
---

# Introducción


## Código y resultado

```{r}
#| message: false
#| warning: false
#| echo: true
1 + 1
```

## Columnas

:::: {.columns}

::: {.column width="40%"}


```{r}
1 + 1
```

:::

::: {.column width="60%"}

```{r}
#| echo: true

2 + 2

runif(500)

runif(100)
```

:::

::::

## Slide con fondo azul {background-color="dodgerblue"}

Fondo azul


# Shiny en una presentación

## App setup

```{r}
#| context: setup
#| message: false
#| warning: false
#| echo: true

library(tidyverse)
library(fpp3)
library(shiny)
library(plotly)
library(shinyWidgets)
library(shinycssloaders)
```
```{r}
animales <- aus_livestock |> 
  distinct(Animal) |> 
  pull()

estados <- aus_livestock |> 
  distinct(State) |> 
  pull()

```


## Visualización

```{r}
checkboxGroupInput(
  inputId = "animal",
  label = "Selecciona el/los animale(s) a visualizar",
  choices = animales,
  inline = TRUE
)

checkboxGroupInput(
  inputId = "estado",
  label = "Selecciona el/los estado(s) a considerar",
  choices = estados,
  inline = TRUE
  
)
```

Aquí está la gráfica:


```{r}
plotlyOutput(outputId = "grafica")
```

```{r}
#| context: server

output$grafica <- renderPlotly({
  aus_livestock |> 
    filter(
      Animal %in% input$animal,
      State %in% input$estado
    ) |> 
    autoplot(Count)
})
```

